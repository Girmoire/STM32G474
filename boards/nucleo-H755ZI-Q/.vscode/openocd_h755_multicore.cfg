# OpenOCD configuration for STM32H755ZI-Q Nucleo board (Multicore)

# ST-Link V3 interface configuration
adapter driver hla
hla_layout stlink
hla_device_desc "ST-LINK"
hla_vid_pid 0x0483 0x374e 0x0483 0x374f 0x0483 0x3752 0x0483 0x3753

# Cannot use HLA for multicore, so we need to use a different approach
# Let's use the CMSIS-DAP interface instead
adapter driver cmsis-dap
cmsis_dap_vid_pid 0x0483 0x374e

# Transport
transport select swd

# Target - manually configure STM32H755 dual core
set _CHIPNAME stm32h755ziq
set _ENDIAN little

# SWD speed
adapter speed 4000

# Create the DAP
swd newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf

# Create the cores
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

# Cortex-M7 core (cpu0)
target create $_CHIPNAME.cpu0 cortex_m -endian $_ENDIAN -dap $_CHIPNAME.dap -ap-num 0 -coreid 0

# Cortex-M4 core (cpu1)  
target create $_CHIPNAME.cpu1 cortex_m -endian $_ENDIAN -dap $_CHIPNAME.dap -ap-num 3 -coreid 1

# Configure work areas
$_CHIPNAME.cpu0 configure -work-area-phys 0x20000000 -work-area-size 0x10000 -work-area-backup 0
$_CHIPNAME.cpu1 configure -work-area-phys 0x10000000 -work-area-size 0x10000 -work-area-backup 0

# Configure GDB ports
$_CHIPNAME.cpu0 configure -gdb-port 50001
$_CHIPNAME.cpu1 configure -gdb-port 50002

# Flash configuration for STM32H7
set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME.bank1.cpu0 stm32h7x 0x08000000 0x100000 0 0 $_CHIPNAME.cpu0
flash bank $_FLASHNAME.bank2.cpu0 stm32h7x 0x08100000 0x100000 0 0 $_CHIPNAME.cpu0

# Reset configuration
reset_config srst_only srst_nogate

# Initialize targets
init

# Default to cpu0
targets $_CHIPNAME.cpu0